name: CI

on:
  push:
    branches: [ main ]
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  rust:
    name: Rust checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.84.0
          components: rustfmt, clippy

      - name: Cache cargo registry
        uses: Swatinem/rust-cache@v2

      - name: Rustfmt
        working-directory: ./core
        run: cargo fmt --all -- --check

      - name: Clippy
        working-directory: ./core
        run: cargo clippy --workspace --all-targets --all-features -- -D warnings

      - name: Run tests
        working-directory: ./core
        run: cargo test --workspace --all-features

      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-llvm-cov

      - name: Generate coverage report
        working-directory: ./core
        run: cargo llvm-cov --workspace --all-features --lcov --output-path target/lcov.info

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: rust-lcov
          path: target/lcov.info

  wasm:
    name: wasm-pack build
    runs-on: ubuntu-latest
    needs: rust
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.84.0
          targets: wasm32-unknown-unknown

      - name: Cache cargo registry
        uses: Swatinem/rust-cache@v2

      - name: Install wasm-pack
        uses: taiki-e/install-action@v2
        with:
          tool: wasm-pack

      - name: Build WASM package
        working-directory: core
        run: |
          rm -rf ../pkg
          wasm-pack build --target nodejs --release --out-dir ../pkg

      - name: Upload WASM artifact
        uses: actions/upload-artifact@v4
        with:
          name: wasm-pkg
          path: pkg

  node:
    name: Node.js checks
    runs-on: ubuntu-latest
    needs: wasm
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Download WASM artifact
        uses: actions/download-artifact@v4
        with:
          name: wasm-pkg
          path: .

      - name: Install dependencies
        run: npm --prefix "$GITHUB_WORKSPACE" install --no-audit --no-fund

      - name: Type check & lint
        run: npm --prefix "$GITHUB_WORKSPACE" run lint

      - name: Build TypeScript
        run: npm --prefix "$GITHUB_WORKSPACE" run build
